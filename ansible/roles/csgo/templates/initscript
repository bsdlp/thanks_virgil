#!/bin/bash
### BEGIN INIT INFO
# Provides:          csgo
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the CS:GO dedicated server
# Description:       Script to simulate daemonizing srcds. It doesn't truly run
#                    as a daemon, instead this script runs it inside a screen
#                    session.
### END INIT INFO

USER="steam"
IP="{{ hostvars[inventory_host]['ansible_eth0']['ipv4']['address'] }}"
PORT="27015"

DIR_ROOT="/srv/steam/csgo/"

PARAMS="-game csgo -console -usercon -secure -autoupdate -tickrate 128 +tv_enable 1 +sv_pure 1 +hostport ${PORT} +ip ${IP} +net_public_adr ${IP} +sv_lan 0 +sv_hibernate_when_empty 0 +game_type 0 +game_mode 1"

DESC="csgo"
NAME="SRCDS"
DAEMON="srcds_run"

PATH=/bin:/usr/bin:/sbin:/usr/sbin

function start {
    su $USER -l -c "tmux new -d -s $NAME '$DAEMON $PARAMS'"
}

case "$1" in
    start)
        echo "Starting $DESC:"
        if [ -e $DIR_ROOT ]; then
            cd $DIR_ROOT
            start
            echo " ... done."
        else
            echo "No such directory: $DIR!"
        fi
        ;;

    stop)
        if su $USER -l -c "tmux ls" |grep $NAME; then
            echo -n "Stopping $DESC:"
            su $USER -l -c "tmux kill-session -t $NAME"
            echo " ... done."
        else
            echo "Couldn't find a running $DESC"
        fi
        ;;

    restart)
        $SELF stop
        $SELF start
        ;;

    status)
        # Check whether there's a "srcds" process
        ps aux | grep -v grep | grep srcds_r > /dev/null
        CHECK=$?
        [ $CHECK -eq 0 ] && echo "SRCDS is UP" || echo "SRCDS is DOWN"
        ;;

    console)
        if su $USER -l -c "tmux ls" |grep $NAME; then
            su $USER -l -c "tmux attach -t $NAME"
        else
            echo "Couldn't find a running $DESC"
        fi
        ;;

    update)
        echo "Updating $DESC..."
        update
        ;;

    *)
        echo "Usage: $0 {start|stop|restart|status|console}"
        exit 1
        ;;

esac

exit 0

